/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
/**
 *
 * @author Cerberus
 */
public class TrainingAssessmentFrame extends javax.swing.JFrame {

    /**
     * Creates new form TrainingAssessmentFrame
     */
    public TrainingAssessmentFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SkillComboBox = new javax.swing.JComboBox<>();
        AnalyzeButton = new javax.swing.JButton();
        ExportButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        EmployeeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SMS - Training Assessment");
        setResizable(false);

        SkillComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PHP", "C#", "C++", "Python", "Java", "Swift" }));
        SkillComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        AnalyzeButton.setText("Analyze");
        AnalyzeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AnalyzeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnalyzeButtonMouseClicked(evt);
            }
        });

        ExportButton.setText("Export Report");
        ExportButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ExportButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExportButtonMouseClicked(evt);
            }
        });

        EmployeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Full Name", "Sex", "Age", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(EmployeeTable);
        if (EmployeeTable.getColumnModel().getColumnCount() > 0) {
            EmployeeTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            EmployeeTable.getColumnModel().getColumn(1).setPreferredWidth(125);
            EmployeeTable.getColumnModel().getColumn(2).setPreferredWidth(50);
            EmployeeTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SkillComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AnalyzeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ExportButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SkillComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnalyzeButton)
                    .addComponent(ExportButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String report = "Training Assessment\n===================\n\n"+
            
            "PHP:\n\n" +
            "#42990 - John Doe (Male, 29) $78,500.00"+
            
            "\n\nC#:\n\n" +
            "#42771 - Ramanathan Tripathi (Male, 34) $65,500.00\n" +
            "#43011 - Karina Artemova (Female, 28) $53,500.00" +
            
            "\n\nC++:\n\n" +
            "#43344 - Kyle Broflovski (Male, 22) $56,750.00"+
            
            "\n\nPython:\n\n" +
            "#41001 - Emilia Green (Female, 31) $66,000.00" +
            
            "\n\nJava:\n\n" +
            "#44002 - Miyoko Mizunaki (Female, 21) $63,750.00" +
            
            "\n\nSwift:\n\n" +
            "#41110 - Haru Harada (Male, 28) $77,000.00\n" +
            "#42298 - Randy Marsh (Male, 39) $118,000.00\n" +
            "#41555 - Priyanka Kaur (Female, 32) $45,750.00";
                            
    
    private void AnalyzeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnalyzeButtonMouseClicked
        DefaultTableModel defaultTableMode = (DefaultTableModel) EmployeeTable.getModel();
        defaultTableMode.setRowCount(0);
        
        switch(SkillComboBox.getSelectedItem().toString()){
            case "PHP":
                defaultTableMode.addRow(new Object[]{"#42990","John Doe","Male","29","$78,500.00"});
                break;
                
            case "C#":
                defaultTableMode.addRow(new Object[]{"#42771","Ramanathan Tripathi","Male","34","$65,500.00"});
                defaultTableMode.addRow(new Object[]{"#43011","Karina Artemova","Female","28","$53,500.00"});
                break;
                
            case "C++":
                defaultTableMode.addRow(new Object[]{"#43344","Kyle Broflovski","Male","22","$56,750.00"});
                break;
                
            case "Python":
                defaultTableMode.addRow(new Object[]{"#41001","Emilia Green","Female","31","$66,000.00"});
                break;
                      
            case "Java":
                defaultTableMode.addRow(new Object[]{"#44002","Miyoko Mizunaki","Female","21","$63,750.00"});
                break;
                
            case "Swift":
                defaultTableMode.addRow(new Object[]{"#41110","Haru Harada","Male","28","$77,000.00"});
                defaultTableMode.addRow(new Object[]{"#42298","Randy Marsh","Male","39","$118,000.00"});
                defaultTableMode.addRow(new Object[]{"#41555","Priyanka Kaur","Female","32","$45,750.00"});
                break;
        }
    }//GEN-LAST:event_AnalyzeButtonMouseClicked

    private void ExportButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExportButtonMouseClicked
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files", "txt");
        fileChooser.setFileFilter(filter);
        if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {          
            FileWriter fileWriter = null;
            try {
                File file = fileChooser.getSelectedFile();
                fileWriter = new FileWriter(file.getAbsoluteFile());
                fileWriter.write(report);
                JOptionPane.showMessageDialog(null, "Report successfully exported to " + file.getAbsolutePath(), "Export Successful", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(ProjectAllocationFrame.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fileWriter.close();
                } catch (IOException ex) {
                    Logger.getLogger(ProjectAllocationFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_ExportButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrainingAssessmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrainingAssessmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrainingAssessmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrainingAssessmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               new TrainingAssessmentFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnalyzeButton;
    private javax.swing.JTable EmployeeTable;
    private javax.swing.JButton ExportButton;
    private javax.swing.JComboBox<String> SkillComboBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
